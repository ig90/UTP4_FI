package zad1;

import javax.swing.*;
import java.awt.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class Database {
    private String url;
    private TravelData travelData;
    public static final String driver = "org.apache.derby.jdbc.ClientDriver";

    public Database(String url, TravelData travelData) {
        this.url = url + ";create=true";
        this.travelData = travelData;
    }


    public void create() {
        try {
            Class.forName(driver);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        Connection conn = getConnection();
        try {
            createTable(conn);
            upload(conn);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void createTable(Connection conn) throws SQLException {
        String query = "create table TRIP (" +
                "TRIPID integer not null generated by default as identity," +
                "LOCALE varchar(6) not null," +
                "CITY varchar(255) not null," +
                "DATEFROM varchar(255) not null," +
                "DATETO varchar(255) not null," +
                "PLACE varchar(255) not null," +
                "PRICE varchar(255) not null," +
                "CURRENCY varchar(255) not null," +
                "PRIMARY KEY(TRIPID)" +
                ")";

        Statement stmt = null;
        try {
            stmt = conn.createStatement();
            stmt.executeUpdate(query);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if(stmt != null) stmt.close();
        }
    }

    private void upload(Connection conn) throws SQLException {
        for(Trip t : travelData.getOffers()){
            Statement stmt = null;
            try {
                stmt = conn.createStatement();
                stmt.executeUpdate(createInsert(t));
            } catch (SQLException e) {
                e.printStackTrace();
            } finally {
                stmt.close();
            }
        }
    }

    private Connection getConnection(){
        try {
            return DriverManager.getConnection(url);
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private static String createInsert(Trip trip) {
        return "INSERT INTO TRIP(LOCALE, CITY, DATEFROM, DATETO, PLACE, PRICE, CURRENCY) values" + trip.toString();
    }

    public void showGui() {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame f = new TableFrame(travelData);
                f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
                f.setPreferredSize(new Dimension(700, 250));
                f.pack();
                f.setVisible(true);
            }
        });
    }
}
